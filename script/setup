#!/bin/sh
#
# Punica - LwM2M server with REST API
# Copyright (C) 2018 8devices
#
# This program is free software: you can redistribute it and/or modify it
# under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License,
# or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# See the GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program. If not, see <https://www.gnu.org/licenses/>.
#

set -e

PROJECT_ROOT_DIR="$(cd $(dirname "$0")/.. && pwd -P)"
SCRIPTS_DIR="${PROJECT_ROOT_DIR}/script"

if [ -z "${BUILD_STATIC}" ]; then
    BUILD_STATIC=true
fi

if [ -z "${BUILD_DIR}" ]; then
    BUILD_DIR="${PROJECT_ROOT_DIR}/build"
fi

if [ -z "${PREFIX_PATH_DIR}" ]; then
    PREFIX_PATH_DIR="${BUILD_DIR}"
fi

SCRIPT_NAME=$(basename -- "$0")
TIMESTAMP=$(date +"%Y-%m-%d_%H-%M-%S")
LOG_FILE="/dev/stdout"

CMAKE_ARGS_BASE="-DCMAKE_INSTALL_PREFIX:PATH=${PREFIX_PATH_DIR}"
if [ "${BUILD_STATIC}" = true ]; then
    CMAKE_ARGS_BASE="${CMAKE_ARGS_BASE} -DBUILD_STATIC=on"
fi

build_punica () {
    cmake_arguments="${CMAKE_ARGS_BASE} $@"
    if [ "${BUILD_STATIC}" = true ]; then
        cmake_args="${cmake_args} -DBUILD_STATIC=on"
    fi

    mkdir -p ${BUILD_DIR}/src &&
    eval "cd ${BUILD_DIR}" &&

    {
        eval "cmake ${cmake_arguments} ${PROJECT_ROOT_DIR}" &&
        make &&
        cd -
    } >> ${LOG_FILE} 2>&1 || {
        (>&2 echo "Failed to build punica!")
        (>&2 echo "\nFor more information refer to ${LOG_FILE}")

        return 1
    }
}

export BUILD_STATIC
export BUILD_DIR
export PREFIX_PATH_DIR
eval "${SCRIPTS_DIR}/bootstrap"

echo "==> Building punica..."
build_punica "$@"

echo "Finished setting up punica!"
